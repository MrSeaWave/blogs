<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sea&#39;s Blog</title>
  <icon>https://mrseawave.github.io/blogs/images/black-cat.svg</icon>
  <subtitle>海浪的博客</subtitle>
  <link href="https://mrseawave.github.io/blogs/atom.xml" rel="self"/>
  
  <link href="https://mrseawave.github.io/blogs/"/>
  <updated>2021-06-25T09:17:19.000Z</updated>
  <id>https://mrseawave.github.io/blogs/</id>
  
  <author>
    <name>Sea</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何在Hexo中对文章md文件分类</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/06/25/hexo-new-post-path/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/06/25/hexo-new-post-path/</id>
    <published>2021-06-25T08:23:31.000Z</published>
    <updated>2021-06-25T09:17:19.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将介绍如何在 Hexo 中对文章 md 文件按日期进行分类&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://mrseawave.github.io/blogs/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://mrseawave.github.io/blogs/tags/hexo/"/>
    
    <category term="md" scheme="https://mrseawave.github.io/blogs/tags/md/"/>
    
  </entry>
  
  <entry>
    <title>webpack import() 动态加载模块踩坑</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/06/23/webpack-import/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/06/23/webpack-import/</id>
    <published>2021-06-23T08:09:42.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文是关于 webpack 中使用 import 时的踩坑记录。&lt;/p&gt;</summary>
    
    
    
    <category term="webpack" scheme="https://mrseawave.github.io/blogs/categories/webpack/"/>
    
    
    <category term="webpack" scheme="https://mrseawave.github.io/blogs/tags/webpack/"/>
    
    <category term="import" scheme="https://mrseawave.github.io/blogs/tags/import/"/>
    
  </entry>
  
  <entry>
    <title>RGB颜色插值渐变原理</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/06/11/rgb-color-gradient-interpolation-principle-and-algorithm/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/06/11/rgb-color-gradient-interpolation-principle-and-algorithm/</id>
    <published>2021-06-11T08:18:10.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将要讲述 RGB 颜色插值渐变原理及其实现。&lt;/p&gt;</summary>
    
    
    
    <category term="css" scheme="https://mrseawave.github.io/blogs/categories/css/"/>
    
    
    <category term="rgb" scheme="https://mrseawave.github.io/blogs/tags/rgb/"/>
    
    <category term="css" scheme="https://mrseawave.github.io/blogs/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>lerna</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/06/07/lerna/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/06/07/lerna/</id>
    <published>2021-06-07T06:42:42.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;lerna-demo&quot;&gt;&lt;a href=&quot;#lerna-demo&quot; class=&quot;headerlink&quot; title=&quot;lerna-demo&quot;&gt;&lt;/a&gt;lerna-demo&lt;/h1&gt;&lt;p&gt;Lerna 是一个工具，它优化了使用 git 和 npm 管理多包存储库的工作流。&lt;/p&gt;
&lt;p&gt;本文通过一个示例讲述了如何基于 Lerna 管理多个 package，并和其它工具整合，打造高效、完美的工作流，最终形成一个最佳实践。&lt;/p&gt;</summary>
    
    
    
    <category term="lerna" scheme="https://mrseawave.github.io/blogs/categories/lerna/"/>
    
    
    <category term="lerna" scheme="https://mrseawave.github.io/blogs/tags/lerna/"/>
    
    <category term="monorepo" scheme="https://mrseawave.github.io/blogs/tags/monorepo/"/>
    
  </entry>
  
  <entry>
    <title>git-repository</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/06/03/git-repository/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/06/03/git-repository/</id>
    <published>2021-06-03T09:04:48.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文讲述如何上传本地代码到远程的空仓库。&lt;/p&gt;</summary>
    
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/categories/git/"/>
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/tags/git/"/>
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/tags/github/"/>
    
    <category term="empty" scheme="https://mrseawave.github.io/blogs/tags/empty/"/>
    
    <category term="repository" scheme="https://mrseawave.github.io/blogs/tags/repository/"/>
    
  </entry>
  
  <entry>
    <title>export 与 export default 的区别</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/06/03/export-export-default/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/06/03/export-export-default/</id>
    <published>2021-06-03T07:58:01.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将介绍 export 与 export default 的差异性。&lt;/p&gt;</summary>
    
    
    
    <category term="js" scheme="https://mrseawave.github.io/blogs/categories/js/"/>
    
    
    <category term="js" scheme="https://mrseawave.github.io/blogs/tags/js/"/>
    
    <category term="export" scheme="https://mrseawave.github.io/blogs/tags/export/"/>
    
    <category term="export default" scheme="https://mrseawave.github.io/blogs/tags/export-default/"/>
    
  </entry>
  
  <entry>
    <title>如何杀死lcasensor进程</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/04/16/kill-lcasensor/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/04/16/kill-lcasensor/</id>
    <published>2021-04-16T09:13:04.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文讲述如何杀死 lcasensor（内网的监控软件，敏感数据监控）这个进程。&lt;/p&gt;</summary>
    
    
    
    <category term="lcasensor" scheme="https://mrseawave.github.io/blogs/categories/lcasensor/"/>
    
    
    <category term="kill" scheme="https://mrseawave.github.io/blogs/tags/kill/"/>
    
    <category term="lcasensor" scheme="https://mrseawave.github.io/blogs/tags/lcasensor/"/>
    
    <category term="dlp" scheme="https://mrseawave.github.io/blogs/tags/dlp/"/>
    
  </entry>
  
  <entry>
    <title>Prettier: support &quot;overrides&quot; option on code styles import</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/04/14/idea-prettier/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/04/14/idea-prettier/</id>
    <published>2021-04-14T06:54:53.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在直接调用 WebStorm 自带的 Prettier 去格式化 wxml / wxss / wxs 文件会提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;File xxx has unsupported type&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="idea" scheme="https://mrseawave.github.io/blogs/categories/idea/"/>
    
    
    <category term="idea" scheme="https://mrseawave.github.io/blogs/tags/idea/"/>
    
    <category term="prettier" scheme="https://mrseawave.github.io/blogs/tags/prettier/"/>
    
    <category term="tools" scheme="https://mrseawave.github.io/blogs/tags/tools/"/>
    
    <category term="WebStorm" scheme="https://mrseawave.github.io/blogs/tags/WebStorm/"/>
    
    <category term="format" scheme="https://mrseawave.github.io/blogs/tags/format/"/>
    
    <category term="wx" scheme="https://mrseawave.github.io/blogs/tags/wx/"/>
    
  </entry>
  
  <entry>
    <title>谷歌浏览器历史版本下载</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/04/06/download-chromium-history-version/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/04/06/download-chromium-history-version/</id>
    <published>2021-04-06T02:41:56.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将介绍谷歌浏览器历史版本如何下载及其代码仓库原理介绍。&lt;/p&gt;</summary>
    
    
    
    <category term="chrome" scheme="https://mrseawave.github.io/blogs/categories/chrome/"/>
    
    
    <category term="download" scheme="https://mrseawave.github.io/blogs/tags/download/"/>
    
    <category term="chrome" scheme="https://mrseawave.github.io/blogs/tags/chrome/"/>
    
    <category term="chromium" scheme="https://mrseawave.github.io/blogs/tags/chromium/"/>
    
    <category term="history" scheme="https://mrseawave.github.io/blogs/tags/history/"/>
    
  </entry>
  
  <entry>
    <title>Husky hooks skipped</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/04/02/husky-error-gui/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/04/02/husky-error-gui/</id>
    <published>2021-04-02T15:28:00.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在&lt;code&gt;sourceTree&lt;/code&gt;遇到使用&lt;code&gt;husky&lt;/code&gt; 会报错的情况：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;figcaption&gt;&lt;span&gt;error&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Can&lt;span class=&quot;string&quot;&gt;&amp;#x27;t find yarn in PATH:......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Skipping pre-push hook&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/categories/git/"/>
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/tags/git/"/>
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/tags/github/"/>
    
    <category term="hooks" scheme="https://mrseawave.github.io/blogs/tags/hooks/"/>
    
    <category term="husky" scheme="https://mrseawave.github.io/blogs/tags/husky/"/>
    
    <category term="sourceTree" scheme="https://mrseawave.github.io/blogs/tags/sourceTree/"/>
    
  </entry>
  
  <entry>
    <title>如何从Apple 美区官网购买礼品卡</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/04/02/apple-gift-card/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/04/02/apple-gift-card/</id>
    <published>2021-04-02T14:42:14.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;淘宝上怕有黑卡，那么我们现在可以通过美区官方的通道购买礼品卡，当然，你需要至少有个 &lt;strong&gt;双币信用卡&lt;/strong&gt; 。按理应该 visa 卡都能用。大家可以试试看。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PS ：这个方法不是马上会收到，需要一点时间，官方写的是 4 小时以内，我大概不到 1 个小时就收到了。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="apple" scheme="https://mrseawave.github.io/blogs/categories/apple/"/>
    
    
    <category term="apple" scheme="https://mrseawave.github.io/blogs/tags/apple/"/>
    
    <category term="gift" scheme="https://mrseawave.github.io/blogs/tags/gift/"/>
    
    <category term="card" scheme="https://mrseawave.github.io/blogs/tags/card/"/>
    
  </entry>
  
  <entry>
    <title>git仓库的代理</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/04/02/git-proxy/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/04/02/git-proxy/</id>
    <published>2021-04-02T14:07:37.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;因为种种原因，&lt;code&gt;github&lt;/code&gt;访问很困难，仓库代码的提交比较受限，因此想到通过挂代理的方式让代码可以正常提交。&lt;/p&gt;</summary>
    
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/categories/git/"/>
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/tags/git/"/>
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/tags/github/"/>
    
    <category term="proxy" scheme="https://mrseawave.github.io/blogs/tags/proxy/"/>
    
    <category term="vpn" scheme="https://mrseawave.github.io/blogs/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>终端如何挂代理</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/04/02/terminal-proxy/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/04/02/terminal-proxy/</id>
    <published>2021-04-02T13:48:21.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将介绍终端是如何挂代理的。&lt;/p&gt;</summary>
    
    
    
    <category term="vpn" scheme="https://mrseawave.github.io/blogs/categories/vpn/"/>
    
    
    <category term="proxy" scheme="https://mrseawave.github.io/blogs/tags/proxy/"/>
    
    <category term="vpn" scheme="https://mrseawave.github.io/blogs/tags/vpn/"/>
    
    <category term="terminal" scheme="https://mrseawave.github.io/blogs/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>Chromium 历史版本离线安装包 - 下载方法</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/04/01/chrome-history-download/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/04/01/chrome-history-download/</id>
    <published>2021-04-01T03:02:16.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Chrome(Chromium) 历史旧版本离线安装包下载方法。&lt;/p&gt;</summary>
    
    
    
    <category term="chrome" scheme="https://mrseawave.github.io/blogs/categories/chrome/"/>
    
    
    <category term="download" scheme="https://mrseawave.github.io/blogs/tags/download/"/>
    
    <category term="chrome" scheme="https://mrseawave.github.io/blogs/tags/chrome/"/>
    
    <category term="chromium" scheme="https://mrseawave.github.io/blogs/tags/chromium/"/>
    
    <category term="history" scheme="https://mrseawave.github.io/blogs/tags/history/"/>
    
  </entry>
  
  <entry>
    <title>vscode插件project-manager使用</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/03/31/vscode-project-manager/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/03/31/vscode-project-manager/</id>
    <published>2021-03-31T09:57:26.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在项目开发的时候，我们经常需要同时操作多个项目，经常需要切换项目。&lt;/p&gt;</summary>
    
    
    
    <category term="vs-code" scheme="https://mrseawave.github.io/blogs/categories/vs-code/"/>
    
    <category term="plugins" scheme="https://mrseawave.github.io/blogs/categories/vs-code/plugins/"/>
    
    
    <category term="vs-code" scheme="https://mrseawave.github.io/blogs/tags/vs-code/"/>
    
    <category term="plugins" scheme="https://mrseawave.github.io/blogs/tags/plugins/"/>
    
  </entry>
  
  <entry>
    <title>工程化配置 git commit 规范</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/03/31/git-commit-cli/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/03/31/git-commit-cli/</id>
    <published>2021-03-31T06:59:41.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;如果你团队的 &lt;code&gt;git commit&lt;/code&gt; 信息紊乱，太过糟糕，觉得有必要统一规范 &lt;code&gt;commit&lt;/code&gt;格式，又或者你是一个强迫症患者，有必要让 &lt;code&gt;commit&lt;/code&gt; 信息整整齐齐的展示。那么，你可以往下瞅瞅。&lt;/p&gt;</summary>
    
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/categories/git/"/>
    
    <category term="commit" scheme="https://mrseawave.github.io/blogs/categories/git/commit/"/>
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/tags/git/"/>
    
    <category term="commit" scheme="https://mrseawave.github.io/blogs/tags/commit/"/>
    
    <category term="cli" scheme="https://mrseawave.github.io/blogs/tags/cli/"/>
    
    <category term="lint" scheme="https://mrseawave.github.io/blogs/tags/lint/"/>
    
  </entry>
  
  <entry>
    <title>Git提交信息规范</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/03/31/git-commit-message/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/03/31/git-commit-message/</id>
    <published>2021-03-31T06:42:43.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Git 每次提交代码，都要写 Commit message（提交说明）&lt;/p&gt;</summary>
    
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/categories/git/"/>
    
    <category term="commit" scheme="https://mrseawave.github.io/blogs/categories/git/commit/"/>
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/tags/git/"/>
    
    <category term="commit" scheme="https://mrseawave.github.io/blogs/tags/commit/"/>
    
    <category term="lint" scheme="https://mrseawave.github.io/blogs/tags/lint/"/>
    
  </entry>
  
  <entry>
    <title>uPic 图床配置教程 - Github</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/03/24/upic-github/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/03/24/upic-github/</id>
    <published>2021-03-24T02:34:14.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;uPic(upload Picture) 是一款 Mac 端的图床(文件)上传客户端，&lt;/strong&gt;可将图片、各种文件上传到配置好的指定提供商的对象存储中。然后快速获取可供互联网访问的文件 URL。&lt;/p&gt;</summary>
    
    
    
    <category term="upic" scheme="https://mrseawave.github.io/blogs/categories/upic/"/>
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/categories/upic/github/"/>
    
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/tags/github/"/>
    
    <category term="upic" scheme="https://mrseawave.github.io/blogs/tags/upic/"/>
    
  </entry>
  
  <entry>
    <title>Mac 上的 APP 推荐</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/03/23/mac-apps/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/03/23/mac-apps/</id>
    <published>2021-03-23T07:55:15.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;值得推荐的 mac 软件&lt;/p&gt;</summary>
    
    
    
    <category term="Mac" scheme="https://mrseawave.github.io/blogs/categories/Mac/"/>
    
    <category term="recommend" scheme="https://mrseawave.github.io/blogs/categories/Mac/recommend/"/>
    
    
    <category term="Mac" scheme="https://mrseawave.github.io/blogs/tags/Mac/"/>
    
    <category term="Apps" scheme="https://mrseawave.github.io/blogs/tags/Apps/"/>
    
    <category term="recommend" scheme="https://mrseawave.github.io/blogs/tags/recommend/"/>
    
  </entry>
  
  <entry>
    <title>vs-code“实用插件”</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/03/15/vs-code-plugins/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/03/15/vs-code-plugins/</id>
    <published>2021-03-15T02:21:49.000Z</published>
    <updated>2021-06-25T09:04:01.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在使用&lt;code&gt;vs-code&lt;/code&gt;时，整理了一些好用的&lt;code&gt;vs-code&lt;/code&gt;插件分享。&lt;/p&gt;</summary>
    
    
    
    <category term="vs-code" scheme="https://mrseawave.github.io/blogs/categories/vs-code/"/>
    
    <category term="plugins" scheme="https://mrseawave.github.io/blogs/categories/vs-code/plugins/"/>
    
    
    <category term="recommend" scheme="https://mrseawave.github.io/blogs/tags/recommend/"/>
    
    <category term="vs-code" scheme="https://mrseawave.github.io/blogs/tags/vs-code/"/>
    
    <category term="plugins" scheme="https://mrseawave.github.io/blogs/tags/plugins/"/>
    
    <category term="ide" scheme="https://mrseawave.github.io/blogs/tags/ide/"/>
    
  </entry>
  
</feed>
