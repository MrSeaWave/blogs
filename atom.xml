<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sea&#39;s Blog</title>
  <icon>https://mrseawave.github.io/blogs/images/black-cat.svg</icon>
  <subtitle>海浪的博客</subtitle>
  <link href="https://mrseawave.github.io/blogs/atom.xml" rel="self"/>
  
  <link href="https://mrseawave.github.io/blogs/"/>
  <updated>2022-01-08T09:16:03.000Z</updated>
  <id>https://mrseawave.github.io/blogs/</id>
  
  <author>
    <name>Sea</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>阅读 install-pkg 源码</title>
    <link href="https://mrseawave.github.io/blogs/articles/2022/01/08/install-pkg/"/>
    <id>https://mrseawave.github.io/blogs/articles/2022/01/08/install-pkg/</id>
    <published>2022-01-08T09:00:28.000Z</published>
    <updated>2022-01-08T09:16:03.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文是在看到&lt;a href=&quot;https://github.com/lxchuan12/install-pkg-analysis&quot;&gt;Vue 团队核心成员开发的 39 行小工具 install-pkg 安装包，值得一学！&lt;/a&gt;文章后，对&lt;a href=&quot;https://github.com/antfu/install-pkg#readme&quot;&gt;@antfu/install-pkg&lt;/a&gt;进行的一次源码阅读。&lt;/p&gt;</summary>
    
    
    
    <category term="analysis" scheme="https://mrseawave.github.io/blogs/categories/analysis/"/>
    
    
    <category term="install-pkg" scheme="https://mrseawave.github.io/blogs/tags/install-pkg/"/>
    
    <category term="analysis" scheme="https://mrseawave.github.io/blogs/tags/analysis/"/>
    
  </entry>
  
  <entry>
    <title>用 Node 编写跨平台 spawn 语句</title>
    <link href="https://mrseawave.github.io/blogs/articles/2022/01/08/cross-spawn/"/>
    <id>https://mrseawave.github.io/blogs/articles/2022/01/08/cross-spawn/</id>
    <published>2022-01-08T08:30:01.000Z</published>
    <updated>2022-01-08T08:50:04.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将会讲述如何跨平台来使用&lt;code&gt;spawn&lt;/code&gt;语句呢？（可以利用&lt;a href=&quot;https://www.npmjs.com/package/cross-spawn&quot;&gt;cross-spawn&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="node" scheme="https://mrseawave.github.io/blogs/categories/node/"/>
    
    
    <category term="node" scheme="https://mrseawave.github.io/blogs/tags/node/"/>
    
    <category term="cross" scheme="https://mrseawave.github.io/blogs/tags/cross/"/>
    
    <category term="spawn" scheme="https://mrseawave.github.io/blogs/tags/spawn/"/>
    
  </entry>
  
  <entry>
    <title>G2 多图形图例问题</title>
    <link href="https://mrseawave.github.io/blogs/articles/2022/01/07/g2-multiple-geometry-legend/"/>
    <id>https://mrseawave.github.io/blogs/articles/2022/01/07/g2-multiple-geometry-legend/</id>
    <published>2022-01-07T05:48:34.000Z</published>
    <updated>2022-01-07T07:20:28.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;谨以此文记录下如何利用 G2 在同一个坐标系内绘制多图时使用图例问题。如无特殊说明，当前 G2 版本为：&lt;code&gt;4.1.37&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="G2" scheme="https://mrseawave.github.io/blogs/categories/G2/"/>
    
    
    <category term="G2" scheme="https://mrseawave.github.io/blogs/tags/G2/"/>
    
    <category term="legend" scheme="https://mrseawave.github.io/blogs/tags/legend/"/>
    
  </entry>
  
  <entry>
    <title>如何在MAC上安装Mysql</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/12/31/mysql-install/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/12/31/mysql-install/</id>
    <published>2021-12-31T01:43:49.000Z</published>
    <updated>2021-12-31T02:21:34.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将介绍如何在 Mac 上安装 Mysql。&lt;/p&gt;</summary>
    
    
    
    <category term="mysql" scheme="https://mrseawave.github.io/blogs/categories/mysql/"/>
    
    
    <category term="install" scheme="https://mrseawave.github.io/blogs/tags/install/"/>
    
    <category term="mySql" scheme="https://mrseawave.github.io/blogs/tags/mySql/"/>
    
  </entry>
  
  <entry>
    <title>Nodejs 中基于 Stream 的多文件合并实现</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/12/30/node-combine-more-files/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/12/30/node-combine-more-files/</id>
    <published>2021-12-30T01:31:23.000Z</published>
    <updated>2021-12-30T02:35:19.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在做关于&lt;a href=&quot;https://github.com/LackZero/rocket-upload-server&quot;&gt;node 端的上传文件&lt;/a&gt;时，碰到一个问题，如何将多个文件合并至一个文件呢？（前端上传的切割文件在服务端进行合并）&lt;/p&gt;</summary>
    
    
    
    <category term="node" scheme="https://mrseawave.github.io/blogs/categories/node/"/>
    
    
    <category term="node" scheme="https://mrseawave.github.io/blogs/tags/node/"/>
    
    <category term="stream" scheme="https://mrseawave.github.io/blogs/tags/stream/"/>
    
    <category term="combine" scheme="https://mrseawave.github.io/blogs/tags/combine/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Actions 如何使用缓存</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/12/17/github-actions-cache/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/12/17/github-actions-cache/</id>
    <published>2021-12-17T05:31:17.000Z</published>
    <updated>2021-12-17T06:46:45.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在之前的文章中 《&lt;a href=&quot;/blogs/articles/2021/01/06/start-github-actions/&quot; title=&quot;github-actions入门&quot;&gt;github-actions入门&lt;/a&gt;》《 &lt;a href=&quot;/blogs/articles/2021/12/16/github-actions-auto-publish/&quot; title=&quot;如何使用Github Action 自动 lerna publish&quot;&gt;如何使用Github Action 自动 lerna publish&lt;/a&gt; 》中，介绍了 Github Actions 的一些用法，其中在构建过程中，会安装很多第三方依赖，而这些依赖会很耗时，因此可以考虑是否有优化的空间，并不需要每次都重新下载，而是可以将这些依赖缓存起来，加快构建速度。&lt;/p&gt;
&lt;p&gt;这里专门开一篇文章，来记录 Github Actions 的缓存优化相关的知识。&lt;/p&gt;</summary>
    
    
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/categories/github/"/>
    
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/tags/github/"/>
    
    <category term="actions" scheme="https://mrseawave.github.io/blogs/tags/actions/"/>
    
    <category term="cache" scheme="https://mrseawave.github.io/blogs/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Actions 如何手动触发</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/12/17/github-actions-manual-trigger/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/12/17/github-actions-manual-trigger/</id>
    <published>2021-12-17T01:48:53.000Z</published>
    <updated>2021-12-17T06:46:45.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;GitHub Ac­tions 在早期可能是处于初级开发阶段，它的功能非常原生，甚至没有直接提供一个手动触发按钮。一般的触发方式为代码变动（&lt;code&gt;push&lt;/code&gt; 、&lt;code&gt;pull_request&lt;/code&gt;），发布文件（&lt;code&gt;release&lt;/code&gt;）或者定时（&lt;code&gt;schedule&lt;/code&gt;）等，这些属于自动触发方式。如果我们需要在 GitHub 仓库没有任何变动的情况下&lt;strong&gt;手动触发&lt;/strong&gt;就需要使用一些奇技淫巧。经历了漫长的功能迭代，官方最终正式带来了手动触发功能，这也宣告了一个瞎折腾时代的结束，一个崭新的折腾时代开始。&lt;/p&gt;</summary>
    
    
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/categories/github/"/>
    
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/tags/github/"/>
    
    <category term="actions" scheme="https://mrseawave.github.io/blogs/tags/actions/"/>
    
    <category term="manual" scheme="https://mrseawave.github.io/blogs/tags/manual/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Github Action 自动 lerna publish</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/12/16/github-actions-auto-publish/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/12/16/github-actions-auto-publish/</id>
    <published>2021-12-16T01:46:00.000Z</published>
    <updated>2021-12-17T06:13:15.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文讲述的是如何利用&lt;code&gt;Github Action&lt;/code&gt;自动化执行 &lt;code&gt;lerna publish&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="lerna" scheme="https://mrseawave.github.io/blogs/categories/lerna/"/>
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/categories/lerna/github/"/>
    
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/tags/github/"/>
    
    <category term="lerna" scheme="https://mrseawave.github.io/blogs/tags/lerna/"/>
    
    <category term="publish" scheme="https://mrseawave.github.io/blogs/tags/publish/"/>
    
    <category term="npm" scheme="https://mrseawave.github.io/blogs/tags/npm/"/>
    
    <category term="actions" scheme="https://mrseawave.github.io/blogs/tags/actions/"/>
    
  </entry>
  
  <entry>
    <title>IDEA粘贴多行代码时，总是自动缩进</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/12/13/idea-reformat-on-paste/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/12/13/idea-reformat-on-paste/</id>
    <published>2021-12-13T01:43:46.000Z</published>
    <updated>2021-12-13T01:53:56.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;当我们在使用 IntelliJ IDEA 去粘贴多行代码时，会发现总是自动缩进，或者被格式化。&lt;/p&gt;</summary>
    
    
    
    <category term="idea" scheme="https://mrseawave.github.io/blogs/categories/idea/"/>
    
    
    <category term="idea" scheme="https://mrseawave.github.io/blogs/tags/idea/"/>
    
    <category term="tools" scheme="https://mrseawave.github.io/blogs/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>npm publish过滤部分文件</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/12/10/npm-publish-filter/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/12/10/npm-publish-filter/</id>
    <published>2021-12-10T06:13:38.000Z</published>
    <updated>2021-12-10T06:23:19.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;npm publish&lt;/strong&gt; 的时候会把项目目录里面所有的文件都&lt;code&gt;publish&lt;/code&gt;到&lt;code&gt;npm&lt;/code&gt;仓库中， 但是往往有一部分目录和文件不想发布上去，比如项目的源码、编译脚本等等信息。&lt;/p&gt;</summary>
    
    
    
    <category term="npm" scheme="https://mrseawave.github.io/blogs/categories/npm/"/>
    
    
    <category term="publish" scheme="https://mrseawave.github.io/blogs/tags/publish/"/>
    
    <category term="npm" scheme="https://mrseawave.github.io/blogs/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>package.json 各字段的作用</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/12/08/packageJson-field/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/12/08/packageJson-field/</id>
    <published>2021-12-08T02:28:52.000Z</published>
    <updated>2021-12-08T06:04:35.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;package.json 文件可以使你的 npm 包对于其他人来说更容易管理和下载。发布 npm 包也是必须要有该文件的。&lt;/p&gt;</summary>
    
    
    
    <category term="package.json" scheme="https://mrseawave.github.io/blogs/categories/package-json/"/>
    
    
    <category term="package.json" scheme="https://mrseawave.github.io/blogs/tags/package-json/"/>
    
  </entry>
  
  <entry>
    <title>git-pull-default</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/11/15/git-pull-default/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/11/15/git-pull-default/</id>
    <published>2021-11-15T05:48:30.000Z</published>
    <updated>2021-11-15T06:31:38.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h2&gt;&lt;p&gt;当使用 git 版本为 2.27.0 以上时，使用&lt;code&gt;git pull&lt;/code&gt;命令出现以下的警告：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hint: Pulling without specifying how to reconcile divergent branches is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint: discouraged. You can squelch this message by running one of the following&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint: commands sometime before your next pull:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint:   git config pull.rebase false  # merge (the default strategy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint:   git config pull.rebase true   # rebase&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint:   git config pull.ff only       # fast-forward only&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint: You can replace &amp;quot;git config&amp;quot; with &amp;quot;git config --global&amp;quot; to set a default&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint: preference for all repositories. You can also pass --rebase, --no-rebase,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint: or --ff-only on the command line to override the configured default per&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hint: invocation.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/categories/git/"/>
    
    
    <category term="git" scheme="https://mrseawave.github.io/blogs/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>ssh-key</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/10/26/ssh-key/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/10/26/ssh-key/</id>
    <published>2021-10-26T01:34:11.000Z</published>
    <updated>2021-10-26T01:45:54.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将介绍的是如何在 mac 上上配置 SSH Key 中的 private key。&lt;/p&gt;</summary>
    
    
    
    <category term="ssh" scheme="https://mrseawave.github.io/blogs/categories/ssh/"/>
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/categories/ssh/github/"/>
    
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/tags/github/"/>
    
    <category term="ssh" scheme="https://mrseawave.github.io/blogs/tags/ssh/"/>
    
    <category term="key" scheme="https://mrseawave.github.io/blogs/tags/key/"/>
    
    <category term="gitlab" scheme="https://mrseawave.github.io/blogs/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>Charles 手机抓包设置</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/09/01/charles-proxy/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/09/01/charles-proxy/</id>
    <published>2021-09-01T06:48:43.000Z</published>
    <updated>2021-09-01T07:55:55.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文主要讲述的是如何使用 Charles 对手机进行抓包。&lt;/p&gt;</summary>
    
    
    
    <category term="Charles" scheme="https://mrseawave.github.io/blogs/categories/Charles/"/>
    
    
    <category term="Charles" scheme="https://mrseawave.github.io/blogs/tags/Charles/"/>
    
  </entry>
  
  <entry>
    <title>oh-my-zsh</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/08/29/oh-my-zsh/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/08/29/oh-my-zsh/</id>
    <published>2021-08-29T07:20:03.000Z</published>
    <updated>2021-08-29T09:08:55.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将介绍一款顺手的&lt;code&gt;shell&lt;/code&gt; —— &lt;code&gt;zsh &lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主要介绍的是 oh my zsh&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="zsh" scheme="https://mrseawave.github.io/blogs/categories/zsh/"/>
    
    
    <category term="install" scheme="https://mrseawave.github.io/blogs/tags/install/"/>
    
    <category term="zsh" scheme="https://mrseawave.github.io/blogs/tags/zsh/"/>
    
  </entry>
  
  <entry>
    <title>在nodejs中使用ES6</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/08/29/node-with-es6/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/08/29/node-with-es6/</id>
    <published>2021-08-29T06:37:03.000Z</published>
    <updated>2021-08-29T07:16:27.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将介绍如何在 nodejs 中使用 ES6 的功能。&lt;/p&gt;</summary>
    
    
    
    <category term="babel" scheme="https://mrseawave.github.io/blogs/categories/babel/"/>
    
    
    <category term="js" scheme="https://mrseawave.github.io/blogs/tags/js/"/>
    
    <category term="node" scheme="https://mrseawave.github.io/blogs/tags/node/"/>
    
    <category term="babel" scheme="https://mrseawave.github.io/blogs/tags/babel/"/>
    
    <category term="es6" scheme="https://mrseawave.github.io/blogs/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>remote Support for password authentication was removed on August 13, 2021</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/08/29/github-login-token/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/08/29/github-login-token/</id>
    <published>2021-08-29T03:58:38.000Z</published>
    <updated>2021-08-29T05:08:17.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文主要介绍 github 开发人员在七夕搞事情：&lt;code&gt;remote: Support for password authentication was removed on August 13, 2021.&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/categories/github/"/>
    
    
    <category term="github" scheme="https://mrseawave.github.io/blogs/tags/github/"/>
    
    <category term="token" scheme="https://mrseawave.github.io/blogs/tags/token/"/>
    
  </entry>
  
  <entry>
    <title>pm2进程间通信</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/07/20/pm2-ipc/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/07/20/pm2-ipc/</id>
    <published>2021-07-20T07:44:42.000Z</published>
    <updated>2021-07-20T08:13:59.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将介绍 pm2 进程间如何通信&lt;/p&gt;</summary>
    
    
    
    <category term="pm2" scheme="https://mrseawave.github.io/blogs/categories/pm2/"/>
    
    
    <category term="pm2" scheme="https://mrseawave.github.io/blogs/tags/pm2/"/>
    
    <category term="ipc" scheme="https://mrseawave.github.io/blogs/tags/ipc/"/>
    
  </entry>
  
  <entry>
    <title>apidoc教程</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/07/15/apidoc/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/07/15/apidoc/</id>
    <published>2021-07-15T07:06:23.000Z</published>
    <updated>2021-07-15T09:30:46.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;apiDoc - 超简单的文档生成器，本文将讲述如何使用它。&lt;/p&gt;</summary>
    
    
    
    <category term="api" scheme="https://mrseawave.github.io/blogs/categories/api/"/>
    
    
    <category term="api" scheme="https://mrseawave.github.io/blogs/tags/api/"/>
    
    <category term="doc" scheme="https://mrseawave.github.io/blogs/tags/doc/"/>
    
  </entry>
  
  <entry>
    <title>koa静态资源处理</title>
    <link href="https://mrseawave.github.io/blogs/articles/2021/07/15/koa-static/"/>
    <id>https://mrseawave.github.io/blogs/articles/2021/07/15/koa-static/</id>
    <published>2021-07-15T01:57:01.000Z</published>
    <updated>2021-07-15T06:21:02.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文将介绍 koa 静态资源处理。&lt;/p&gt;</summary>
    
    
    
    <category term="koa" scheme="https://mrseawave.github.io/blogs/categories/koa/"/>
    
    
    <category term="koa" scheme="https://mrseawave.github.io/blogs/tags/koa/"/>
    
    <category term="static" scheme="https://mrseawave.github.io/blogs/tags/static/"/>
    
    <category term="basePath" scheme="https://mrseawave.github.io/blogs/tags/basePath/"/>
    
  </entry>
  
</feed>
